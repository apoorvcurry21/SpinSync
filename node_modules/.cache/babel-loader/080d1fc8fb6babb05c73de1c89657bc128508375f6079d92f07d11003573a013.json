{"ast":null,"code":"var _jsxFileName = \"D:\\\\SpinSync\\\\src\\\\components\\\\FindPlayers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindPlayers = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        let q = collection(db, \"players\");\n        if (location.trim() !== \"\") {\n          q = query(q, where(\"location\", \"==\", location.trim()));\n        }\n        const snapshot = await getDocs(q);\n        const playersList = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setPlayers(playersList);\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n      }\n    };\n    fetchPlayers();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"Enter location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [player.name, \" - \", player.location]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FindPlayers, \"X36WiyzgQxWLBMlDLmVafVgqZ7g=\");\n_c = FindPlayers;\nexport default FindPlayers;\nvar _c;\n$RefreshReg$(_c, \"FindPlayers\");","map":{"version":3,"names":["React","useEffect","useState","collection","getDocs","query","where","db","jsxDEV","_jsxDEV","FindPlayers","_s","players","setPlayers","location","setLocation","fetchPlayers","q","trim","snapshot","playersList","docs","map","doc","id","data","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","player","name","_c","$RefreshReg$"],"sources":["D:/SpinSync/src/components/FindPlayers.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { db } from \"../firebaseConfig\";\r\n\r\nconst FindPlayers = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [location, setLocation] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    const fetchPlayers = async () => {\r\n      try {\r\n        let q = collection(db, \"players\");\r\n        if (location.trim() !== \"\") {\r\n          q = query(q, where(\"location\", \"==\", location.trim()));\r\n        }\r\n        const snapshot = await getDocs(q);\r\n        const playersList = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setPlayers(playersList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching players:\", error);\r\n      }\r\n    };\r\n    fetchPlayers();\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} placeholder=\"Enter location\" />\r\n      <ul>\r\n        {players.map((player) => (\r\n          <li key={player.id}>{player.name} - {player.location}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindPlayers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACtE,SAASC,EAAE,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAIC,CAAC,GAAGd,UAAU,CAACI,EAAE,EAAE,SAAS,CAAC;QACjC,IAAIO,QAAQ,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;UAC1BD,CAAC,GAAGZ,KAAK,CAACY,CAAC,EAAEX,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEQ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD;QACA,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACa,CAAC,CAAC;QACjC,MAAMG,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;UAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;UAAE,GAAGD,GAAG,CAACE,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;QAC/EZ,UAAU,CAACO,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDV,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEhB,QAAS;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjH7B,OAAA;MAAAmB,QAAA,EACGhB,OAAO,CAACU,GAAG,CAAEiB,MAAM,iBAClB9B,OAAA;QAAAmB,QAAA,GAAqBW,MAAM,CAACC,IAAI,EAAC,KAAG,EAACD,MAAM,CAACzB,QAAQ;MAAA,GAA3CyB,MAAM,CAACf,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/BID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}