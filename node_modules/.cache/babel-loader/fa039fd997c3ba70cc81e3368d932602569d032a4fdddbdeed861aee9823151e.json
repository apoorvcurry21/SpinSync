{"ast":null,"code":"var _jsxFileName = \"D:\\\\SpinSync\\\\src\\\\components\\\\FindTables.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindTables = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  useEffect(() => {\n    const fetchTables = async () => {\n      try {\n        let q = collection(db, \"tables\");\n        if (selectedLocation) {\n          q = query(q, where(\"location\", \"==\", selectedLocation));\n        }\n        const snapshot = await getDocs(q);\n        const tablesList = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setTables(tablesList);\n      } catch (error) {\n        console.error(\"Error fetching tables:\", error);\n      }\n    };\n    fetchTables();\n  }, [selectedLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: selectedLocation,\n      onChange: e => setSelectedLocation(e.target.value),\n      placeholder: \"Enter location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      style: {\n        height: \"400px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), tables.filter(table => table.latitude && table.longitude).map(table => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [table.latitude, table.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: table.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this), table.location, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 34\n          }, this), \"Type: \", table.type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this), \"Fee: \", table.fee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, table.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FindTables, \"4A63dnyQzGnQrZTxf7RY44yKRZQ=\");\n_c = FindTables;\nexport default FindTables;\nvar _c;\n$RefreshReg$(_c, \"FindTables\");","map":{"version":3,"names":["React","useEffect","useState","collection","getDocs","query","where","db","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","FindTables","_s","tables","setTables","selectedLocation","setSelectedLocation","fetchTables","q","snapshot","tablesList","docs","map","doc","id","data","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","filter","table","latitude","longitude","position","name","location","fee","_c","$RefreshReg$"],"sources":["D:/SpinSync/src/components/FindTables.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst FindTables = () => {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchTables = async () => {\r\n      try {\r\n        let q = collection(db, \"tables\");\r\n        if (selectedLocation) {\r\n          q = query(q, where(\"location\", \"==\", selectedLocation));\r\n        }\r\n        const snapshot = await getDocs(q);\r\n        const tablesList = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setTables(tablesList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tables:\", error);\r\n      }\r\n    };\r\n    fetchTables();\r\n  }, [selectedLocation]);\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={selectedLocation} onChange={(e) => setSelectedLocation(e.target.value)} placeholder=\"Enter location\" />\r\n      <MapContainer center={[51.505, -0.09]} zoom={13} style={{ height: \"400px\", width: \"100%\" }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {tables\r\n          .filter((table) => table.latitude && table.longitude)\r\n          .map((table) => (\r\n            <Marker key={table.id} position={[table.latitude, table.longitude]}>\r\n              <Popup>\r\n                <b>{table.name}</b> <br />\r\n                {table.location} <br />\r\n                Type: {table.type} <br />\r\n                Fee: {table.fee}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindTables;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}